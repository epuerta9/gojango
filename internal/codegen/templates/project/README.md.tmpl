# {{.Name}}

A Gojango web application.

## Features

- **Framework**: Gojango (Django-like for Go)
- **Frontend**: {{.Frontend}}
- **Database**: {{.Database}}
{{- range .Features}}
- **{{.}}**: Enabled
{{- end}}

## Getting Started

### Prerequisites

- Go 1.20 or later
- Make
{{- if eq .Database "postgres"}}
- PostgreSQL (or use Docker)
{{- else if eq .Database "mysql"}}
- MySQL (or use Docker)
{{- end}}
{{- if or (has .Features "redis") (has .Features "cache")}}
- Redis (or use Docker)
{{- end}}

### Installation

1. Clone and setup:
   ```bash
   git clone <your-repo>
   cd {{.Name}}
   make setup
   ```

2. Configure environment:
   ```bash
   cp .env.example .env
   # Edit .env with your settings
   ```

3. Start services (if using Docker):
   ```bash
   make docker-up
   ```

4. Run the application:
   ```bash
   make run
   ```

The application will be available at http://localhost:8080

## Development

### Project Structure

```
{{.Name}}/
├── apps/                 # Your applications
├── cmd/                  # Command line tools
├── internal/             # Private packages
├── static/               # Static files (CSS, JS, images)
├── templates/            # Global templates
├── tests/                # Integration tests
├── main.go               # Application entry point
├── Makefile              # Development commands
├── docker-compose.yml    # Development services
└── gojango.yaml         # Project configuration
```

### Available Commands

```bash
make help        # Show all available commands
make run         # Start development server
make test        # Run tests
make build       # Build the application
make setup       # Setup development environment
make docker-up   # Start development services
make clean       # Clean build artifacts
```

### Creating Apps

Apps are self-contained modules that organize your code:

```bash
# Create a new app (available in Phase 2+)
gojango startapp blog
```

This creates:
- `apps/blog/app.go` - App configuration
- `apps/blog/views.go` - HTTP handlers
- `apps/blog/schema/` - Database models (Phase 3+)
- `apps/blog/templates/` - HTML templates (Phase 2+)

## Deployment

### Building for Production

```bash
make build
```

This creates a binary at `bin/{{.Name}}` that can be deployed anywhere.

### Environment Variables

Key environment variables for production:

- `DEBUG=false` - Disable debug mode
- `PORT=8080` - HTTP port
- `DATABASE_URL` - Database connection string
{{- if or (has .Features "redis") (has .Features "cache")}}
- `REDIS_URL` - Redis connection string
{{- end}}

## Documentation

- [Gojango Documentation](https://gojango.dev)
- [Getting Started Guide](https://gojango.dev/docs/getting-started)
- [Tutorial](https://gojango.dev/docs/tutorial)

## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests
5. Submit a pull request

## License

This project is licensed under the MIT License.