// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file admin.proto (package gojango.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3, Timestamp, Value } from "@bufbuild/protobuf";

/**
 * Model metadata
 *
 * @generated from message gojango.admin.ModelInfo
 */
export class ModelInfo extends Message<ModelInfo> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string verbose_name = 3;
   */
  verboseName = "";

  /**
   * @generated from field: string verbose_name_plural = 4;
   */
  verboseNamePlural = "";

  /**
   * @generated from field: repeated string list_display = 5;
   */
  listDisplay: string[] = [];

  /**
   * @generated from field: repeated string search_fields = 6;
   */
  searchFields: string[] = [];

  /**
   * @generated from field: repeated string list_filter = 7;
   */
  listFilter: string[] = [];

  /**
   * @generated from field: repeated string readonly_fields = 8;
   */
  readonlyFields: string[] = [];

  /**
   * @generated from field: repeated string exclude = 9;
   */
  exclude: string[] = [];

  /**
   * @generated from field: gojango.admin.ModelPermissions permissions = 10;
   */
  permissions?: ModelPermissions;

  /**
   * @generated from field: repeated gojango.admin.AdminAction actions = 11;
   */
  actions: AdminAction[] = [];

  /**
   * @generated from field: int32 list_per_page = 12;
   */
  listPerPage = 0;

  /**
   * @generated from field: string ordering = 13;
   */
  ordering = "";

  /**
   * @generated from field: bool show_full_result_count = 14;
   */
  showFullResultCount = false;

  constructor(data?: PartialMessage<ModelInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ModelInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "verbose_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "verbose_name_plural", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "list_display", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "search_fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "list_filter", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "readonly_fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "exclude", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "permissions", kind: "message", T: ModelPermissions },
    { no: 11, name: "actions", kind: "message", T: AdminAction, repeated: true },
    { no: 12, name: "list_per_page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "ordering", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "show_full_result_count", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModelInfo {
    return new ModelInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModelInfo {
    return new ModelInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModelInfo {
    return new ModelInfo().fromJsonString(jsonString, options);
  }

  static equals(a: ModelInfo | PlainMessage<ModelInfo> | undefined, b: ModelInfo | PlainMessage<ModelInfo> | undefined): boolean {
    return proto3.util.equals(ModelInfo, a, b);
  }
}

/**
 * @generated from message gojango.admin.ModelPermissions
 */
export class ModelPermissions extends Message<ModelPermissions> {
  /**
   * @generated from field: bool add = 1;
   */
  add = false;

  /**
   * @generated from field: bool change = 2;
   */
  change = false;

  /**
   * @generated from field: bool delete = 3;
   */
  delete = false;

  /**
   * @generated from field: bool view = 4;
   */
  view = false;

  constructor(data?: PartialMessage<ModelPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ModelPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "add", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "change", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "delete", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "view", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModelPermissions {
    return new ModelPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModelPermissions {
    return new ModelPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModelPermissions {
    return new ModelPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: ModelPermissions | PlainMessage<ModelPermissions> | undefined, b: ModelPermissions | PlainMessage<ModelPermissions> | undefined): boolean {
    return proto3.util.equals(ModelPermissions, a, b);
  }
}

/**
 * @generated from message gojango.admin.AdminAction
 */
export class AdminAction extends Message<AdminAction> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: bool confirmation_required = 3;
   */
  confirmationRequired = false;

  /**
   * @generated from field: repeated string permissions = 4;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<AdminAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.AdminAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "confirmation_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminAction {
    return new AdminAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminAction {
    return new AdminAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminAction {
    return new AdminAction().fromJsonString(jsonString, options);
  }

  static equals(a: AdminAction | PlainMessage<AdminAction> | undefined, b: AdminAction | PlainMessage<AdminAction> | undefined): boolean {
    return proto3.util.equals(AdminAction, a, b);
  }
}

/**
 * Field metadata for forms and display
 *
 * @generated from message gojango.admin.FieldInfo
 */
export class FieldInfo extends Message<FieldInfo> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string field_type = 2;
   */
  fieldType = "";

  /**
   * @generated from field: string verbose_name = 3;
   */
  verboseName = "";

  /**
   * @generated from field: string help_text = 4;
   */
  helpText = "";

  /**
   * @generated from field: bool required = 5;
   */
  required = false;

  /**
   * @generated from field: bool editable = 6;
   */
  editable = false;

  /**
   * @generated from field: bool blank = 7;
   */
  blank = false;

  /**
   * @generated from field: bool null = 8;
   */
  null = false;

  /**
   * @generated from field: google.protobuf.Any default_value = 9;
   */
  defaultValue?: Any;

  /**
   * @generated from field: repeated string choices = 10;
   */
  choices: string[] = [];

  /**
   * @generated from field: int32 max_length = 11;
   */
  maxLength = 0;

  /**
   * @generated from field: bool unique = 12;
   */
  unique = false;

  /**
   * @generated from field: string related_model = 13;
   */
  relatedModel = "";

  /**
   * @generated from field: string widget_type = 14;
   */
  widgetType = "";

  constructor(data?: PartialMessage<FieldInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.FieldInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "verbose_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "help_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "editable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "blank", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "null", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "default_value", kind: "message", T: Any },
    { no: 10, name: "choices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "max_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "unique", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "related_model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "widget_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FieldInfo {
    return new FieldInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FieldInfo {
    return new FieldInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FieldInfo {
    return new FieldInfo().fromJsonString(jsonString, options);
  }

  static equals(a: FieldInfo | PlainMessage<FieldInfo> | undefined, b: FieldInfo | PlainMessage<FieldInfo> | undefined): boolean {
    return proto3.util.equals(FieldInfo, a, b);
  }
}

/**
 * Requests and responses
 *
 * @generated from message gojango.admin.ListModelsRequest
 */
export class ListModelsRequest extends Message<ListModelsRequest> {
  constructor(data?: PartialMessage<ListModelsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListModelsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModelsRequest {
    return new ListModelsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModelsRequest {
    return new ListModelsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModelsRequest {
    return new ListModelsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListModelsRequest | PlainMessage<ListModelsRequest> | undefined, b: ListModelsRequest | PlainMessage<ListModelsRequest> | undefined): boolean {
    return proto3.util.equals(ListModelsRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.ListModelsResponse
 */
export class ListModelsResponse extends Message<ListModelsResponse> {
  /**
   * @generated from field: map<string, gojango.admin.ModelInfo> models = 1;
   */
  models: { [key: string]: ModelInfo } = {};

  /**
   * @generated from field: gojango.admin.SiteInfo site = 2;
   */
  site?: SiteInfo;

  constructor(data?: PartialMessage<ListModelsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListModelsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "models", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ModelInfo} },
    { no: 2, name: "site", kind: "message", T: SiteInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModelsResponse {
    return new ListModelsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModelsResponse {
    return new ListModelsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModelsResponse {
    return new ListModelsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListModelsResponse | PlainMessage<ListModelsResponse> | undefined, b: ListModelsResponse | PlainMessage<ListModelsResponse> | undefined): boolean {
    return proto3.util.equals(ListModelsResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.SiteInfo
 */
export class SiteInfo extends Message<SiteInfo> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string header_title = 2;
   */
  headerTitle = "";

  /**
   * @generated from field: string index_title = 3;
   */
  indexTitle = "";

  constructor(data?: PartialMessage<SiteInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.SiteInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "header_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "index_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SiteInfo {
    return new SiteInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SiteInfo {
    return new SiteInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SiteInfo {
    return new SiteInfo().fromJsonString(jsonString, options);
  }

  static equals(a: SiteInfo | PlainMessage<SiteInfo> | undefined, b: SiteInfo | PlainMessage<SiteInfo> | undefined): boolean {
    return proto3.util.equals(SiteInfo, a, b);
  }
}

/**
 * @generated from message gojango.admin.GetModelSchemaRequest
 */
export class GetModelSchemaRequest extends Message<GetModelSchemaRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  constructor(data?: PartialMessage<GetModelSchemaRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.GetModelSchemaRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModelSchemaRequest {
    return new GetModelSchemaRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModelSchemaRequest {
    return new GetModelSchemaRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModelSchemaRequest {
    return new GetModelSchemaRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetModelSchemaRequest | PlainMessage<GetModelSchemaRequest> | undefined, b: GetModelSchemaRequest | PlainMessage<GetModelSchemaRequest> | undefined): boolean {
    return proto3.util.equals(GetModelSchemaRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.GetModelSchemaResponse
 */
export class GetModelSchemaResponse extends Message<GetModelSchemaResponse> {
  /**
   * @generated from field: gojango.admin.ModelInfo model_info = 1;
   */
  modelInfo?: ModelInfo;

  /**
   * @generated from field: repeated gojango.admin.FieldInfo fields = 2;
   */
  fields: FieldInfo[] = [];

  constructor(data?: PartialMessage<GetModelSchemaResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.GetModelSchemaResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model_info", kind: "message", T: ModelInfo },
    { no: 2, name: "fields", kind: "message", T: FieldInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModelSchemaResponse {
    return new GetModelSchemaResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModelSchemaResponse {
    return new GetModelSchemaResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModelSchemaResponse {
    return new GetModelSchemaResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetModelSchemaResponse | PlainMessage<GetModelSchemaResponse> | undefined, b: GetModelSchemaResponse | PlainMessage<GetModelSchemaResponse> | undefined): boolean {
    return proto3.util.equals(GetModelSchemaResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.ListObjectsRequest
 */
export class ListObjectsRequest extends Message<ListObjectsRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: int32 page = 3;
   */
  page = 0;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize = 0;

  /**
   * @generated from field: string ordering = 5;
   */
  ordering = "";

  /**
   * @generated from field: map<string, string> filters = 6;
   */
  filters: { [key: string]: string } = {};

  /**
   * @generated from field: string search = 7;
   */
  search = "";

  constructor(data?: PartialMessage<ListObjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListObjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ordering", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "filters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 7, name: "search", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListObjectsRequest {
    return new ListObjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListObjectsRequest {
    return new ListObjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListObjectsRequest {
    return new ListObjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListObjectsRequest | PlainMessage<ListObjectsRequest> | undefined, b: ListObjectsRequest | PlainMessage<ListObjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListObjectsRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.ListObjectsResponse
 */
export class ListObjectsResponse extends Message<ListObjectsResponse> {
  /**
   * @generated from field: repeated gojango.admin.ObjectData objects = 1;
   */
  objects: ObjectData[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  /**
   * @generated from field: int32 page = 3;
   */
  page = 0;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize = 0;

  /**
   * @generated from field: bool has_next = 5;
   */
  hasNext = false;

  /**
   * @generated from field: bool has_previous = 6;
   */
  hasPrevious = false;

  /**
   * @generated from field: int32 total_pages = 7;
   */
  totalPages = 0;

  /**
   * @generated from field: repeated string display_fields = 8;
   */
  displayFields: string[] = [];

  constructor(data?: PartialMessage<ListObjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListObjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "objects", kind: "message", T: ObjectData, repeated: true },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "has_next", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "has_previous", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "total_pages", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "display_fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListObjectsResponse {
    return new ListObjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListObjectsResponse {
    return new ListObjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListObjectsResponse {
    return new ListObjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListObjectsResponse | PlainMessage<ListObjectsResponse> | undefined, b: ListObjectsResponse | PlainMessage<ListObjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListObjectsResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.ObjectData
 */
export class ObjectData extends Message<ObjectData> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: map<string, google.protobuf.Value> fields = 2;
   */
  fields: { [key: string]: Value } = {};

  /**
   * @generated from field: string str_representation = 3;
   */
  strRepresentation = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<ObjectData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ObjectData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fields", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 3, name: "str_representation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created_at", kind: "message", T: Timestamp },
    { no: 5, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectData {
    return new ObjectData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectData {
    return new ObjectData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectData {
    return new ObjectData().fromJsonString(jsonString, options);
  }

  static equals(a: ObjectData | PlainMessage<ObjectData> | undefined, b: ObjectData | PlainMessage<ObjectData> | undefined): boolean {
    return proto3.util.equals(ObjectData, a, b);
  }
}

/**
 * @generated from message gojango.admin.GetObjectRequest
 */
export class GetObjectRequest extends Message<GetObjectRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<GetObjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.GetObjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectRequest {
    return new GetObjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectRequest {
    return new GetObjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectRequest {
    return new GetObjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetObjectRequest | PlainMessage<GetObjectRequest> | undefined, b: GetObjectRequest | PlainMessage<GetObjectRequest> | undefined): boolean {
    return proto3.util.equals(GetObjectRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.GetObjectResponse
 */
export class GetObjectResponse extends Message<GetObjectResponse> {
  /**
   * @generated from field: gojango.admin.ObjectData object = 1;
   */
  object?: ObjectData;

  /**
   * @generated from field: repeated gojango.admin.FieldInfo form_fields = 2;
   */
  formFields: FieldInfo[] = [];

  constructor(data?: PartialMessage<GetObjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.GetObjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "object", kind: "message", T: ObjectData },
    { no: 2, name: "form_fields", kind: "message", T: FieldInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectResponse {
    return new GetObjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectResponse {
    return new GetObjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectResponse {
    return new GetObjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetObjectResponse | PlainMessage<GetObjectResponse> | undefined, b: GetObjectResponse | PlainMessage<GetObjectResponse> | undefined): boolean {
    return proto3.util.equals(GetObjectResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.CreateObjectRequest
 */
export class CreateObjectRequest extends Message<CreateObjectRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: map<string, google.protobuf.Value> data = 3;
   */
  data: { [key: string]: Value } = {};

  constructor(data?: PartialMessage<CreateObjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.CreateObjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateObjectRequest {
    return new CreateObjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateObjectRequest {
    return new CreateObjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateObjectRequest {
    return new CreateObjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateObjectRequest | PlainMessage<CreateObjectRequest> | undefined, b: CreateObjectRequest | PlainMessage<CreateObjectRequest> | undefined): boolean {
    return proto3.util.equals(CreateObjectRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.CreateObjectResponse
 */
export class CreateObjectResponse extends Message<CreateObjectResponse> {
  /**
   * @generated from field: gojango.admin.ObjectData object = 1;
   */
  object?: ObjectData;

  /**
   * @generated from field: repeated gojango.admin.ValidationError errors = 2;
   */
  errors: ValidationError[] = [];

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  constructor(data?: PartialMessage<CreateObjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.CreateObjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "object", kind: "message", T: ObjectData },
    { no: 2, name: "errors", kind: "message", T: ValidationError, repeated: true },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateObjectResponse {
    return new CreateObjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateObjectResponse {
    return new CreateObjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateObjectResponse {
    return new CreateObjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateObjectResponse | PlainMessage<CreateObjectResponse> | undefined, b: CreateObjectResponse | PlainMessage<CreateObjectResponse> | undefined): boolean {
    return proto3.util.equals(CreateObjectResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.UpdateObjectRequest
 */
export class UpdateObjectRequest extends Message<UpdateObjectRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  /**
   * @generated from field: map<string, google.protobuf.Value> data = 4;
   */
  data: { [key: string]: Value } = {};

  constructor(data?: PartialMessage<UpdateObjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.UpdateObjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateObjectRequest {
    return new UpdateObjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateObjectRequest {
    return new UpdateObjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateObjectRequest {
    return new UpdateObjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateObjectRequest | PlainMessage<UpdateObjectRequest> | undefined, b: UpdateObjectRequest | PlainMessage<UpdateObjectRequest> | undefined): boolean {
    return proto3.util.equals(UpdateObjectRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.UpdateObjectResponse
 */
export class UpdateObjectResponse extends Message<UpdateObjectResponse> {
  /**
   * @generated from field: gojango.admin.ObjectData object = 1;
   */
  object?: ObjectData;

  /**
   * @generated from field: repeated gojango.admin.ValidationError errors = 2;
   */
  errors: ValidationError[] = [];

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  constructor(data?: PartialMessage<UpdateObjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.UpdateObjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "object", kind: "message", T: ObjectData },
    { no: 2, name: "errors", kind: "message", T: ValidationError, repeated: true },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateObjectResponse {
    return new UpdateObjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateObjectResponse {
    return new UpdateObjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateObjectResponse {
    return new UpdateObjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateObjectResponse | PlainMessage<UpdateObjectResponse> | undefined, b: UpdateObjectResponse | PlainMessage<UpdateObjectResponse> | undefined): boolean {
    return proto3.util.equals(UpdateObjectResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.DeleteObjectRequest
 */
export class DeleteObjectRequest extends Message<DeleteObjectRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteObjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.DeleteObjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectRequest {
    return new DeleteObjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectRequest {
    return new DeleteObjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectRequest {
    return new DeleteObjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteObjectRequest | PlainMessage<DeleteObjectRequest> | undefined, b: DeleteObjectRequest | PlainMessage<DeleteObjectRequest> | undefined): boolean {
    return proto3.util.equals(DeleteObjectRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.DeleteObjectResponse
 */
export class DeleteObjectResponse extends Message<DeleteObjectResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteObjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.DeleteObjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectResponse {
    return new DeleteObjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectResponse {
    return new DeleteObjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectResponse {
    return new DeleteObjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteObjectResponse | PlainMessage<DeleteObjectResponse> | undefined, b: DeleteObjectResponse | PlainMessage<DeleteObjectResponse> | undefined): boolean {
    return proto3.util.equals(DeleteObjectResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.DeleteObjectsRequest
 */
export class DeleteObjectsRequest extends Message<DeleteObjectsRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: repeated string ids = 3;
   */
  ids: string[] = [];

  constructor(data?: PartialMessage<DeleteObjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.DeleteObjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectsRequest {
    return new DeleteObjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectsRequest {
    return new DeleteObjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectsRequest {
    return new DeleteObjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteObjectsRequest | PlainMessage<DeleteObjectsRequest> | undefined, b: DeleteObjectsRequest | PlainMessage<DeleteObjectsRequest> | undefined): boolean {
    return proto3.util.equals(DeleteObjectsRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.DeleteObjectsResponse
 */
export class DeleteObjectsResponse extends Message<DeleteObjectsResponse> {
  /**
   * @generated from field: int32 deleted_count = 1;
   */
  deletedCount = 0;

  /**
   * @generated from field: repeated string failed_ids = 2;
   */
  failedIds: string[] = [];

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteObjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.DeleteObjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deleted_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "failed_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectsResponse {
    return new DeleteObjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectsResponse {
    return new DeleteObjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectsResponse {
    return new DeleteObjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteObjectsResponse | PlainMessage<DeleteObjectsResponse> | undefined, b: DeleteObjectsResponse | PlainMessage<DeleteObjectsResponse> | undefined): boolean {
    return proto3.util.equals(DeleteObjectsResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.ExecuteActionRequest
 */
export class ExecuteActionRequest extends Message<ExecuteActionRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: string action = 3;
   */
  action = "";

  /**
   * @generated from field: repeated string object_ids = 4;
   */
  objectIds: string[] = [];

  /**
   * @generated from field: map<string, google.protobuf.Value> parameters = 5;
   */
  parameters: { [key: string]: Value } = {};

  constructor(data?: PartialMessage<ExecuteActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ExecuteActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "object_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "parameters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteActionRequest {
    return new ExecuteActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteActionRequest {
    return new ExecuteActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteActionRequest {
    return new ExecuteActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExecuteActionRequest | PlainMessage<ExecuteActionRequest> | undefined, b: ExecuteActionRequest | PlainMessage<ExecuteActionRequest> | undefined): boolean {
    return proto3.util.equals(ExecuteActionRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.ExecuteActionResponse
 */
export class ExecuteActionResponse extends Message<ExecuteActionResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: int32 affected_count = 3;
   */
  affectedCount = 0;

  /**
   * @generated from field: repeated gojango.admin.ValidationError errors = 4;
   */
  errors: ValidationError[] = [];

  constructor(data?: PartialMessage<ExecuteActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ExecuteActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "affected_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "errors", kind: "message", T: ValidationError, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteActionResponse {
    return new ExecuteActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteActionResponse {
    return new ExecuteActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteActionResponse {
    return new ExecuteActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExecuteActionResponse | PlainMessage<ExecuteActionResponse> | undefined, b: ExecuteActionResponse | PlainMessage<ExecuteActionResponse> | undefined): boolean {
    return proto3.util.equals(ExecuteActionResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.ListActionsRequest
 */
export class ListActionsRequest extends Message<ListActionsRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  constructor(data?: PartialMessage<ListActionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListActionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListActionsRequest {
    return new ListActionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListActionsRequest | PlainMessage<ListActionsRequest> | undefined, b: ListActionsRequest | PlainMessage<ListActionsRequest> | undefined): boolean {
    return proto3.util.equals(ListActionsRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.ListActionsResponse
 */
export class ListActionsResponse extends Message<ListActionsResponse> {
  /**
   * @generated from field: repeated gojango.admin.AdminAction actions = 1;
   */
  actions: AdminAction[] = [];

  constructor(data?: PartialMessage<ListActionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ListActionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "actions", kind: "message", T: AdminAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListActionsResponse {
    return new ListActionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListActionsResponse | PlainMessage<ListActionsResponse> | undefined, b: ListActionsResponse | PlainMessage<ListActionsResponse> | undefined): boolean {
    return proto3.util.equals(ListActionsResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.SearchObjectsRequest
 */
export class SearchObjectsRequest extends Message<SearchObjectsRequest> {
  /**
   * @generated from field: string app = 1;
   */
  app = "";

  /**
   * @generated from field: string model = 2;
   */
  model = "";

  /**
   * @generated from field: string query = 3;
   */
  query = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<SearchObjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.SearchObjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchObjectsRequest {
    return new SearchObjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchObjectsRequest {
    return new SearchObjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchObjectsRequest {
    return new SearchObjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchObjectsRequest | PlainMessage<SearchObjectsRequest> | undefined, b: SearchObjectsRequest | PlainMessage<SearchObjectsRequest> | undefined): boolean {
    return proto3.util.equals(SearchObjectsRequest, a, b);
  }
}

/**
 * @generated from message gojango.admin.SearchObjectsResponse
 */
export class SearchObjectsResponse extends Message<SearchObjectsResponse> {
  /**
   * @generated from field: repeated gojango.admin.ObjectData objects = 1;
   */
  objects: ObjectData[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  constructor(data?: PartialMessage<SearchObjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.SearchObjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "objects", kind: "message", T: ObjectData, repeated: true },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchObjectsResponse {
    return new SearchObjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchObjectsResponse {
    return new SearchObjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchObjectsResponse {
    return new SearchObjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchObjectsResponse | PlainMessage<SearchObjectsResponse> | undefined, b: SearchObjectsResponse | PlainMessage<SearchObjectsResponse> | undefined): boolean {
    return proto3.util.equals(SearchObjectsResponse, a, b);
  }
}

/**
 * @generated from message gojango.admin.ValidationError
 */
export class ValidationError extends Message<ValidationError> {
  /**
   * @generated from field: string field = 1;
   */
  field = "";

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  constructor(data?: PartialMessage<ValidationError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.ValidationError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidationError {
    return new ValidationError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidationError {
    return new ValidationError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidationError {
    return new ValidationError().fromJsonString(jsonString, options);
  }

  static equals(a: ValidationError | PlainMessage<ValidationError> | undefined, b: ValidationError | PlainMessage<ValidationError> | undefined): boolean {
    return proto3.util.equals(ValidationError, a, b);
  }
}

/**
 * Filter types for advanced filtering
 *
 * @generated from message gojango.admin.FilterOption
 */
export class FilterOption extends Message<FilterOption> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string value = 2;
   */
  value = "";

  /**
   * @generated from field: int32 count = 3;
   */
  count = 0;

  constructor(data?: PartialMessage<FilterOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.FilterOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterOption {
    return new FilterOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterOption {
    return new FilterOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterOption {
    return new FilterOption().fromJsonString(jsonString, options);
  }

  static equals(a: FilterOption | PlainMessage<FilterOption> | undefined, b: FilterOption | PlainMessage<FilterOption> | undefined): boolean {
    return proto3.util.equals(FilterOption, a, b);
  }
}

/**
 * @generated from message gojango.admin.FilterSpec
 */
export class FilterSpec extends Message<FilterSpec> {
  /**
   * @generated from field: string field = 1;
   */
  field = "";

  /**
   * @generated from field: string lookup_type = 2;
   */
  lookupType = "";

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: repeated gojango.admin.FilterOption options = 4;
   */
  options: FilterOption[] = [];

  constructor(data?: PartialMessage<FilterSpec>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gojango.admin.FilterSpec";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lookup_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "options", kind: "message", T: FilterOption, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterSpec {
    return new FilterSpec().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterSpec {
    return new FilterSpec().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterSpec {
    return new FilterSpec().fromJsonString(jsonString, options);
  }

  static equals(a: FilterSpec | PlainMessage<FilterSpec> | undefined, b: FilterSpec | PlainMessage<FilterSpec> | undefined): boolean {
    return proto3.util.equals(FilterSpec, a, b);
  }
}

