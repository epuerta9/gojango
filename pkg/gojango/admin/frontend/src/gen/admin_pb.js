// source: admin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.gojango.admin.AdminAction', null, global);
goog.exportSymbol('proto.gojango.admin.CreateObjectRequest', null, global);
goog.exportSymbol('proto.gojango.admin.CreateObjectResponse', null, global);
goog.exportSymbol('proto.gojango.admin.DeleteObjectRequest', null, global);
goog.exportSymbol('proto.gojango.admin.DeleteObjectResponse', null, global);
goog.exportSymbol('proto.gojango.admin.DeleteObjectsRequest', null, global);
goog.exportSymbol('proto.gojango.admin.DeleteObjectsResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ExecuteActionRequest', null, global);
goog.exportSymbol('proto.gojango.admin.ExecuteActionResponse', null, global);
goog.exportSymbol('proto.gojango.admin.FieldInfo', null, global);
goog.exportSymbol('proto.gojango.admin.FilterOption', null, global);
goog.exportSymbol('proto.gojango.admin.FilterSpec', null, global);
goog.exportSymbol('proto.gojango.admin.GetModelSchemaRequest', null, global);
goog.exportSymbol('proto.gojango.admin.GetModelSchemaResponse', null, global);
goog.exportSymbol('proto.gojango.admin.GetObjectRequest', null, global);
goog.exportSymbol('proto.gojango.admin.GetObjectResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ListActionsRequest', null, global);
goog.exportSymbol('proto.gojango.admin.ListActionsResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ListModelsRequest', null, global);
goog.exportSymbol('proto.gojango.admin.ListModelsResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ListObjectsRequest', null, global);
goog.exportSymbol('proto.gojango.admin.ListObjectsResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ModelInfo', null, global);
goog.exportSymbol('proto.gojango.admin.ModelPermissions', null, global);
goog.exportSymbol('proto.gojango.admin.ObjectData', null, global);
goog.exportSymbol('proto.gojango.admin.SearchObjectsRequest', null, global);
goog.exportSymbol('proto.gojango.admin.SearchObjectsResponse', null, global);
goog.exportSymbol('proto.gojango.admin.SiteInfo', null, global);
goog.exportSymbol('proto.gojango.admin.UpdateObjectRequest', null, global);
goog.exportSymbol('proto.gojango.admin.UpdateObjectResponse', null, global);
goog.exportSymbol('proto.gojango.admin.ValidationError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ModelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.ModelInfo.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.ModelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ModelInfo.displayName = 'proto.gojango.admin.ModelInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ModelPermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ModelPermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ModelPermissions.displayName = 'proto.gojango.admin.ModelPermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.AdminAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.AdminAction.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.AdminAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.AdminAction.displayName = 'proto.gojango.admin.AdminAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.FieldInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.FieldInfo.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.FieldInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.FieldInfo.displayName = 'proto.gojango.admin.FieldInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListModelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ListModelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListModelsRequest.displayName = 'proto.gojango.admin.ListModelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListModelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ListModelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListModelsResponse.displayName = 'proto.gojango.admin.ListModelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.SiteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.SiteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.SiteInfo.displayName = 'proto.gojango.admin.SiteInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.GetModelSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.GetModelSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.GetModelSchemaRequest.displayName = 'proto.gojango.admin.GetModelSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.GetModelSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.GetModelSchemaResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.GetModelSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.GetModelSchemaResponse.displayName = 'proto.gojango.admin.GetModelSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListObjectsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ListObjectsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListObjectsRequest.displayName = 'proto.gojango.admin.ListObjectsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListObjectsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.ListObjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.ListObjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListObjectsResponse.displayName = 'proto.gojango.admin.ListObjectsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ObjectData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ObjectData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ObjectData.displayName = 'proto.gojango.admin.ObjectData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.GetObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.GetObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.GetObjectRequest.displayName = 'proto.gojango.admin.GetObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.GetObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.GetObjectResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.GetObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.GetObjectResponse.displayName = 'proto.gojango.admin.GetObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.CreateObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.CreateObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.CreateObjectRequest.displayName = 'proto.gojango.admin.CreateObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.CreateObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.CreateObjectResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.CreateObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.CreateObjectResponse.displayName = 'proto.gojango.admin.CreateObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.UpdateObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.UpdateObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.UpdateObjectRequest.displayName = 'proto.gojango.admin.UpdateObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.UpdateObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.UpdateObjectResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.UpdateObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.UpdateObjectResponse.displayName = 'proto.gojango.admin.UpdateObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.DeleteObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.DeleteObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.DeleteObjectRequest.displayName = 'proto.gojango.admin.DeleteObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.DeleteObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.DeleteObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.DeleteObjectResponse.displayName = 'proto.gojango.admin.DeleteObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.DeleteObjectsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.DeleteObjectsRequest.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.DeleteObjectsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.DeleteObjectsRequest.displayName = 'proto.gojango.admin.DeleteObjectsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.DeleteObjectsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.DeleteObjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.DeleteObjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.DeleteObjectsResponse.displayName = 'proto.gojango.admin.DeleteObjectsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ExecuteActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.ExecuteActionRequest.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.ExecuteActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ExecuteActionRequest.displayName = 'proto.gojango.admin.ExecuteActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ExecuteActionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.ExecuteActionResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.ExecuteActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ExecuteActionResponse.displayName = 'proto.gojango.admin.ExecuteActionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListActionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ListActionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListActionsRequest.displayName = 'proto.gojango.admin.ListActionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ListActionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.ListActionsResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.ListActionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ListActionsResponse.displayName = 'proto.gojango.admin.ListActionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.SearchObjectsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.SearchObjectsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.SearchObjectsRequest.displayName = 'proto.gojango.admin.SearchObjectsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.SearchObjectsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.SearchObjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.SearchObjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.SearchObjectsResponse.displayName = 'proto.gojango.admin.SearchObjectsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.ValidationError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.ValidationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.ValidationError.displayName = 'proto.gojango.admin.ValidationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.FilterOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gojango.admin.FilterOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.FilterOption.displayName = 'proto.gojango.admin.FilterOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gojango.admin.FilterSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gojango.admin.FilterSpec.repeatedFields_, null);
};
goog.inherits(proto.gojango.admin.FilterSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gojango.admin.FilterSpec.displayName = 'proto.gojango.admin.FilterSpec';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.ModelInfo.repeatedFields_ = [5,6,7,8,9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ModelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ModelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ModelInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ModelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    verboseName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    verboseNamePlural: jspb.Message.getFieldWithDefault(msg, 4, ""),
    listDisplayList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    searchFieldsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    listFilterList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    readonlyFieldsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    excludeList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    permissions: (f = msg.getPermissions()) && proto.gojango.admin.ModelPermissions.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.gojango.admin.AdminAction.toObject, includeInstance),
    listPerPage: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ordering: jspb.Message.getFieldWithDefault(msg, 13, ""),
    showFullResultCount: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ModelInfo}
 */
proto.gojango.admin.ModelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ModelInfo;
  return proto.gojango.admin.ModelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ModelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ModelInfo}
 */
proto.gojango.admin.ModelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerboseName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerboseNamePlural(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addListDisplay(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSearchFields(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addListFilter(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addReadonlyFields(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addExclude(value);
      break;
    case 10:
      var value = new proto.gojango.admin.ModelPermissions;
      reader.readMessage(value,proto.gojango.admin.ModelPermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 11:
      var value = new proto.gojango.admin.AdminAction;
      reader.readMessage(value,proto.gojango.admin.AdminAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListPerPage(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdering(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowFullResultCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ModelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ModelInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ModelInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ModelInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVerboseName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVerboseNamePlural();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getListDisplayList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getSearchFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getListFilterList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getReadonlyFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gojango.admin.ModelPermissions.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.gojango.admin.AdminAction.serializeBinaryToWriter
    );
  }
  f = message.getListPerPage();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getOrdering();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getShowFullResultCount();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.ModelInfo.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.gojango.admin.ModelInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string verbose_name = 3;
 * @return {string}
 */
proto.gojango.admin.ModelInfo.prototype.getVerboseName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setVerboseName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string verbose_name_plural = 4;
 * @return {string}
 */
proto.gojango.admin.ModelInfo.prototype.getVerboseNamePlural = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setVerboseNamePlural = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string list_display = 5;
 * @return {!Array<string>}
 */
proto.gojango.admin.ModelInfo.prototype.getListDisplayList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setListDisplayList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.addListDisplay = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearListDisplayList = function() {
  return this.setListDisplayList([]);
};


/**
 * repeated string search_fields = 6;
 * @return {!Array<string>}
 */
proto.gojango.admin.ModelInfo.prototype.getSearchFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setSearchFieldsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.addSearchFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearSearchFieldsList = function() {
  return this.setSearchFieldsList([]);
};


/**
 * repeated string list_filter = 7;
 * @return {!Array<string>}
 */
proto.gojango.admin.ModelInfo.prototype.getListFilterList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setListFilterList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.addListFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearListFilterList = function() {
  return this.setListFilterList([]);
};


/**
 * repeated string readonly_fields = 8;
 * @return {!Array<string>}
 */
proto.gojango.admin.ModelInfo.prototype.getReadonlyFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setReadonlyFieldsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.addReadonlyFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearReadonlyFieldsList = function() {
  return this.setReadonlyFieldsList([]);
};


/**
 * repeated string exclude = 9;
 * @return {!Array<string>}
 */
proto.gojango.admin.ModelInfo.prototype.getExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setExcludeList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.addExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearExcludeList = function() {
  return this.setExcludeList([]);
};


/**
 * optional ModelPermissions permissions = 10;
 * @return {?proto.gojango.admin.ModelPermissions}
 */
proto.gojango.admin.ModelInfo.prototype.getPermissions = function() {
  return /** @type{?proto.gojango.admin.ModelPermissions} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.ModelPermissions, 10));
};


/**
 * @param {?proto.gojango.admin.ModelPermissions|undefined} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
*/
proto.gojango.admin.ModelInfo.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.ModelInfo.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated AdminAction actions = 11;
 * @return {!Array<!proto.gojango.admin.AdminAction>}
 */
proto.gojango.admin.ModelInfo.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.gojango.admin.AdminAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.AdminAction, 11));
};


/**
 * @param {!Array<!proto.gojango.admin.AdminAction>} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
*/
proto.gojango.admin.ModelInfo.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.gojango.admin.AdminAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.AdminAction}
 */
proto.gojango.admin.ModelInfo.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.gojango.admin.AdminAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional int32 list_per_page = 12;
 * @return {number}
 */
proto.gojango.admin.ModelInfo.prototype.getListPerPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setListPerPage = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string ordering = 13;
 * @return {string}
 */
proto.gojango.admin.ModelInfo.prototype.getOrdering = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setOrdering = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool show_full_result_count = 14;
 * @return {boolean}
 */
proto.gojango.admin.ModelInfo.prototype.getShowFullResultCount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ModelInfo} returns this
 */
proto.gojango.admin.ModelInfo.prototype.setShowFullResultCount = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ModelPermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ModelPermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ModelPermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ModelPermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    add: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    change: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    pb_delete: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    view: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ModelPermissions}
 */
proto.gojango.admin.ModelPermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ModelPermissions;
  return proto.gojango.admin.ModelPermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ModelPermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ModelPermissions}
 */
proto.gojango.admin.ModelPermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdd(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChange(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelete(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ModelPermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ModelPermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ModelPermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ModelPermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdd();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getChange();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDelete();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getView();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool add = 1;
 * @return {boolean}
 */
proto.gojango.admin.ModelPermissions.prototype.getAdd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ModelPermissions} returns this
 */
proto.gojango.admin.ModelPermissions.prototype.setAdd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool change = 2;
 * @return {boolean}
 */
proto.gojango.admin.ModelPermissions.prototype.getChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ModelPermissions} returns this
 */
proto.gojango.admin.ModelPermissions.prototype.setChange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool delete = 3;
 * @return {boolean}
 */
proto.gojango.admin.ModelPermissions.prototype.getDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ModelPermissions} returns this
 */
proto.gojango.admin.ModelPermissions.prototype.setDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool view = 4;
 * @return {boolean}
 */
proto.gojango.admin.ModelPermissions.prototype.getView = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ModelPermissions} returns this
 */
proto.gojango.admin.ModelPermissions.prototype.setView = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.AdminAction.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.AdminAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.AdminAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.AdminAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.AdminAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    confirmationRequired: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    permissionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.AdminAction}
 */
proto.gojango.admin.AdminAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.AdminAction;
  return proto.gojango.admin.AdminAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.AdminAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.AdminAction}
 */
proto.gojango.admin.AdminAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmationRequired(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.AdminAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.AdminAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.AdminAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.AdminAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConfirmationRequired();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gojango.admin.AdminAction.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.gojango.admin.AdminAction.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool confirmation_required = 3;
 * @return {boolean}
 */
proto.gojango.admin.AdminAction.prototype.getConfirmationRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.setConfirmationRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated string permissions = 4;
 * @return {!Array<string>}
 */
proto.gojango.admin.AdminAction.prototype.getPermissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.setPermissionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.addPermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.AdminAction} returns this
 */
proto.gojango.admin.AdminAction.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.FieldInfo.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.FieldInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.FieldInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.FieldInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FieldInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    verboseName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    helpText: jspb.Message.getFieldWithDefault(msg, 4, ""),
    required: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    editable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    blank: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    pb_null: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    defaultValue: (f = msg.getDefaultValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    maxLength: jspb.Message.getFieldWithDefault(msg, 11, 0),
    unique: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    relatedModel: jspb.Message.getFieldWithDefault(msg, 13, ""),
    widgetType: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.FieldInfo}
 */
proto.gojango.admin.FieldInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.FieldInfo;
  return proto.gojango.admin.FieldInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.FieldInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.FieldInfo}
 */
proto.gojango.admin.FieldInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerboseName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpText(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequired(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEditable(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlank(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNull(value);
      break;
    case 9:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxLength(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnique(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelatedModel(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidgetType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.FieldInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.FieldInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.FieldInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FieldInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVerboseName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHelpText();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequired();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getEditable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBlank();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getNull();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getMaxLength();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUnique();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getRelatedModel();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWidgetType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field_type = 2;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getFieldType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setFieldType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string verbose_name = 3;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getVerboseName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setVerboseName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string help_text = 4;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getHelpText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setHelpText = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool required = 5;
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.getRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool editable = 6;
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.getEditable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setEditable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool blank = 7;
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.getBlank = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setBlank = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool null = 8;
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.getNull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setNull = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional google.protobuf.Any default_value = 9;
 * @return {?proto.google.protobuf.Any}
 */
proto.gojango.admin.FieldInfo.prototype.getDefaultValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 9));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
*/
proto.gojango.admin.FieldInfo.prototype.setDefaultValue = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.clearDefaultValue = function() {
  return this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string choices = 10;
 * @return {!Array<string>}
 */
proto.gojango.admin.FieldInfo.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};


/**
 * optional int32 max_length = 11;
 * @return {number}
 */
proto.gojango.admin.FieldInfo.prototype.getMaxLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setMaxLength = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool unique = 12;
 * @return {boolean}
 */
proto.gojango.admin.FieldInfo.prototype.getUnique = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setUnique = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string related_model = 13;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getRelatedModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setRelatedModel = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string widget_type = 14;
 * @return {string}
 */
proto.gojango.admin.FieldInfo.prototype.getWidgetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FieldInfo} returns this
 */
proto.gojango.admin.FieldInfo.prototype.setWidgetType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListModelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListModelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListModelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListModelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListModelsRequest}
 */
proto.gojango.admin.ListModelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListModelsRequest;
  return proto.gojango.admin.ListModelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListModelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListModelsRequest}
 */
proto.gojango.admin.ListModelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListModelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListModelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListModelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListModelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListModelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListModelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListModelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListModelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsMap: (f = msg.getModelsMap()) ? f.toObject(includeInstance, proto.gojango.admin.ModelInfo.toObject) : [],
    site: (f = msg.getSite()) && proto.gojango.admin.SiteInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListModelsResponse}
 */
proto.gojango.admin.ListModelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListModelsResponse;
  return proto.gojango.admin.ListModelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListModelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListModelsResponse}
 */
proto.gojango.admin.ListModelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getModelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gojango.admin.ModelInfo.deserializeBinaryFromReader, "", new proto.gojango.admin.ModelInfo());
         });
      break;
    case 2:
      var value = new proto.gojango.admin.SiteInfo;
      reader.readMessage(value,proto.gojango.admin.SiteInfo.deserializeBinaryFromReader);
      msg.setSite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListModelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListModelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListModelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListModelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gojango.admin.ModelInfo.serializeBinaryToWriter);
  }
  f = message.getSite();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gojango.admin.SiteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, ModelInfo> models = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gojango.admin.ModelInfo>}
 */
proto.gojango.admin.ListModelsResponse.prototype.getModelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gojango.admin.ModelInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.gojango.admin.ModelInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.ListModelsResponse} returns this
 */
proto.gojango.admin.ListModelsResponse.prototype.clearModelsMap = function() {
  this.getModelsMap().clear();
  return this;
};


/**
 * optional SiteInfo site = 2;
 * @return {?proto.gojango.admin.SiteInfo}
 */
proto.gojango.admin.ListModelsResponse.prototype.getSite = function() {
  return /** @type{?proto.gojango.admin.SiteInfo} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.SiteInfo, 2));
};


/**
 * @param {?proto.gojango.admin.SiteInfo|undefined} value
 * @return {!proto.gojango.admin.ListModelsResponse} returns this
*/
proto.gojango.admin.ListModelsResponse.prototype.setSite = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.ListModelsResponse} returns this
 */
proto.gojango.admin.ListModelsResponse.prototype.clearSite = function() {
  return this.setSite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.ListModelsResponse.prototype.hasSite = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.SiteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.SiteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.SiteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SiteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    headerTitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    indexTitle: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.SiteInfo}
 */
proto.gojango.admin.SiteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.SiteInfo;
  return proto.gojango.admin.SiteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.SiteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.SiteInfo}
 */
proto.gojango.admin.SiteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndexTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.SiteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.SiteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.SiteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SiteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeaderTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIndexTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gojango.admin.SiteInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SiteInfo} returns this
 */
proto.gojango.admin.SiteInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string header_title = 2;
 * @return {string}
 */
proto.gojango.admin.SiteInfo.prototype.getHeaderTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SiteInfo} returns this
 */
proto.gojango.admin.SiteInfo.prototype.setHeaderTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string index_title = 3;
 * @return {string}
 */
proto.gojango.admin.SiteInfo.prototype.getIndexTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SiteInfo} returns this
 */
proto.gojango.admin.SiteInfo.prototype.setIndexTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.GetModelSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.GetModelSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetModelSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.GetModelSchemaRequest}
 */
proto.gojango.admin.GetModelSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.GetModelSchemaRequest;
  return proto.gojango.admin.GetModelSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.GetModelSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.GetModelSchemaRequest}
 */
proto.gojango.admin.GetModelSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.GetModelSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.GetModelSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetModelSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.GetModelSchemaRequest} returns this
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.GetModelSchemaRequest} returns this
 */
proto.gojango.admin.GetModelSchemaRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.GetModelSchemaResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.GetModelSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.GetModelSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetModelSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelInfo: (f = msg.getModelInfo()) && proto.gojango.admin.ModelInfo.toObject(includeInstance, f),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.gojango.admin.FieldInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.GetModelSchemaResponse}
 */
proto.gojango.admin.GetModelSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.GetModelSchemaResponse;
  return proto.gojango.admin.GetModelSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.GetModelSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.GetModelSchemaResponse}
 */
proto.gojango.admin.GetModelSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ModelInfo;
      reader.readMessage(value,proto.gojango.admin.ModelInfo.deserializeBinaryFromReader);
      msg.setModelInfo(value);
      break;
    case 2:
      var value = new proto.gojango.admin.FieldInfo;
      reader.readMessage(value,proto.gojango.admin.FieldInfo.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.GetModelSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.GetModelSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetModelSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gojango.admin.ModelInfo.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gojango.admin.FieldInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelInfo model_info = 1;
 * @return {?proto.gojango.admin.ModelInfo}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.getModelInfo = function() {
  return /** @type{?proto.gojango.admin.ModelInfo} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.ModelInfo, 1));
};


/**
 * @param {?proto.gojango.admin.ModelInfo|undefined} value
 * @return {!proto.gojango.admin.GetModelSchemaResponse} returns this
*/
proto.gojango.admin.GetModelSchemaResponse.prototype.setModelInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.GetModelSchemaResponse} returns this
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.clearModelInfo = function() {
  return this.setModelInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.hasModelInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FieldInfo fields = 2;
 * @return {!Array<!proto.gojango.admin.FieldInfo>}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.gojango.admin.FieldInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.FieldInfo, 2));
};


/**
 * @param {!Array<!proto.gojango.admin.FieldInfo>} value
 * @return {!proto.gojango.admin.GetModelSchemaResponse} returns this
*/
proto.gojango.admin.GetModelSchemaResponse.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gojango.admin.FieldInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.FieldInfo}
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gojango.admin.FieldInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.GetModelSchemaResponse} returns this
 */
proto.gojango.admin.GetModelSchemaResponse.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListObjectsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListObjectsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListObjectsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListObjectsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ordering: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filtersMap: (f = msg.getFiltersMap()) ? f.toObject(includeInstance, undefined) : [],
    search: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListObjectsRequest}
 */
proto.gojango.admin.ListObjectsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListObjectsRequest;
  return proto.gojango.admin.ListObjectsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListObjectsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListObjectsRequest}
 */
proto.gojango.admin.ListObjectsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdering(value);
      break;
    case 6:
      var value = msg.getFiltersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListObjectsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListObjectsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListObjectsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListObjectsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrdering();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFiltersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string ordering = 5;
 * @return {string}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getOrdering = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setOrdering = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * map<string, string> filters = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getFiltersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.clearFiltersMap = function() {
  this.getFiltersMap().clear();
  return this;
};


/**
 * optional string search = 7;
 * @return {string}
 */
proto.gojango.admin.ListObjectsRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListObjectsRequest} returns this
 */
proto.gojango.admin.ListObjectsRequest.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.ListObjectsResponse.repeatedFields_ = [1,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListObjectsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListObjectsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListObjectsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListObjectsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.gojango.admin.ObjectData.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hasNext: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    hasPrevious: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    totalPages: jspb.Message.getFieldWithDefault(msg, 7, 0),
    displayFieldsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListObjectsResponse}
 */
proto.gojango.admin.ListObjectsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListObjectsResponse;
  return proto.gojango.admin.ListObjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListObjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListObjectsResponse}
 */
proto.gojango.admin.ListObjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ObjectData;
      reader.readMessage(value,proto.gojango.admin.ObjectData.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNext(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPrevious(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPages(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addDisplayFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListObjectsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListObjectsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListObjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListObjectsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gojango.admin.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getHasNext();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getHasPrevious();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDisplayFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * repeated ObjectData objects = 1;
 * @return {!Array<!proto.gojango.admin.ObjectData>}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.gojango.admin.ObjectData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.ObjectData, 1));
};


/**
 * @param {!Array<!proto.gojango.admin.ObjectData>} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
*/
proto.gojango.admin.ListObjectsResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gojango.admin.ObjectData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.ListObjectsResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gojango.admin.ObjectData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool has_next = 5;
 * @return {boolean}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getHasNext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setHasNext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool has_previous = 6;
 * @return {boolean}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getHasPrevious = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setHasPrevious = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 total_pages = 7;
 * @return {number}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated string display_fields = 8;
 * @return {!Array<string>}
 */
proto.gojango.admin.ListObjectsResponse.prototype.getDisplayFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.setDisplayFieldsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.addDisplayFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ListObjectsResponse} returns this
 */
proto.gojango.admin.ListObjectsResponse.prototype.clearDisplayFieldsList = function() {
  return this.setDisplayFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ObjectData.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ObjectData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ObjectData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ObjectData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    strRepresentation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.ObjectData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ObjectData;
  return proto.gojango.admin.ObjectData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ObjectData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.ObjectData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrRepresentation(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ObjectData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ObjectData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ObjectData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ObjectData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getStrRepresentation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gojango.admin.ObjectData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ObjectData} returns this
 */
proto.gojango.admin.ObjectData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, google.protobuf.Value> fields = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.gojango.admin.ObjectData.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.ObjectData} returns this
 */
proto.gojango.admin.ObjectData.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;
};


/**
 * optional string str_representation = 3;
 * @return {string}
 */
proto.gojango.admin.ObjectData.prototype.getStrRepresentation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ObjectData} returns this
 */
proto.gojango.admin.ObjectData.prototype.setStrRepresentation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.gojango.admin.ObjectData.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.gojango.admin.ObjectData} returns this
*/
proto.gojango.admin.ObjectData.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.ObjectData} returns this
 */
proto.gojango.admin.ObjectData.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.ObjectData.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.gojango.admin.ObjectData.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.gojango.admin.ObjectData} returns this
*/
proto.gojango.admin.ObjectData.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.ObjectData} returns this
 */
proto.gojango.admin.ObjectData.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.ObjectData.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.GetObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.GetObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.GetObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.GetObjectRequest}
 */
proto.gojango.admin.GetObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.GetObjectRequest;
  return proto.gojango.admin.GetObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.GetObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.GetObjectRequest}
 */
proto.gojango.admin.GetObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.GetObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.GetObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.GetObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.GetObjectRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.GetObjectRequest} returns this
 */
proto.gojango.admin.GetObjectRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.GetObjectRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.GetObjectRequest} returns this
 */
proto.gojango.admin.GetObjectRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.gojango.admin.GetObjectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.GetObjectRequest} returns this
 */
proto.gojango.admin.GetObjectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.GetObjectResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.GetObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.GetObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.GetObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && proto.gojango.admin.ObjectData.toObject(includeInstance, f),
    formFieldsList: jspb.Message.toObjectList(msg.getFormFieldsList(),
    proto.gojango.admin.FieldInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.GetObjectResponse}
 */
proto.gojango.admin.GetObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.GetObjectResponse;
  return proto.gojango.admin.GetObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.GetObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.GetObjectResponse}
 */
proto.gojango.admin.GetObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ObjectData;
      reader.readMessage(value,proto.gojango.admin.ObjectData.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 2:
      var value = new proto.gojango.admin.FieldInfo;
      reader.readMessage(value,proto.gojango.admin.FieldInfo.deserializeBinaryFromReader);
      msg.addFormFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.GetObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.GetObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.GetObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.GetObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gojango.admin.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getFormFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gojango.admin.FieldInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectData object = 1;
 * @return {?proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.GetObjectResponse.prototype.getObject = function() {
  return /** @type{?proto.gojango.admin.ObjectData} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.ObjectData, 1));
};


/**
 * @param {?proto.gojango.admin.ObjectData|undefined} value
 * @return {!proto.gojango.admin.GetObjectResponse} returns this
*/
proto.gojango.admin.GetObjectResponse.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.GetObjectResponse} returns this
 */
proto.gojango.admin.GetObjectResponse.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.GetObjectResponse.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FieldInfo form_fields = 2;
 * @return {!Array<!proto.gojango.admin.FieldInfo>}
 */
proto.gojango.admin.GetObjectResponse.prototype.getFormFieldsList = function() {
  return /** @type{!Array<!proto.gojango.admin.FieldInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.FieldInfo, 2));
};


/**
 * @param {!Array<!proto.gojango.admin.FieldInfo>} value
 * @return {!proto.gojango.admin.GetObjectResponse} returns this
*/
proto.gojango.admin.GetObjectResponse.prototype.setFormFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gojango.admin.FieldInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.FieldInfo}
 */
proto.gojango.admin.GetObjectResponse.prototype.addFormFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gojango.admin.FieldInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.GetObjectResponse} returns this
 */
proto.gojango.admin.GetObjectResponse.prototype.clearFormFieldsList = function() {
  return this.setFormFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.CreateObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.CreateObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.CreateObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.CreateObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.CreateObjectRequest}
 */
proto.gojango.admin.CreateObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.CreateObjectRequest;
  return proto.gojango.admin.CreateObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.CreateObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.CreateObjectRequest}
 */
proto.gojango.admin.CreateObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.CreateObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.CreateObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.CreateObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.CreateObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.CreateObjectRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.CreateObjectRequest} returns this
 */
proto.gojango.admin.CreateObjectRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.CreateObjectRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.CreateObjectRequest} returns this
 */
proto.gojango.admin.CreateObjectRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, google.protobuf.Value> data = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.gojango.admin.CreateObjectRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.CreateObjectRequest} returns this
 */
proto.gojango.admin.CreateObjectRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.CreateObjectResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.CreateObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.CreateObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.CreateObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.CreateObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && proto.gojango.admin.ObjectData.toObject(includeInstance, f),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.gojango.admin.ValidationError.toObject, includeInstance),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.CreateObjectResponse}
 */
proto.gojango.admin.CreateObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.CreateObjectResponse;
  return proto.gojango.admin.CreateObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.CreateObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.CreateObjectResponse}
 */
proto.gojango.admin.CreateObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ObjectData;
      reader.readMessage(value,proto.gojango.admin.ObjectData.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 2:
      var value = new proto.gojango.admin.ValidationError;
      reader.readMessage(value,proto.gojango.admin.ValidationError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.CreateObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.CreateObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.CreateObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.CreateObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gojango.admin.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gojango.admin.ValidationError.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ObjectData object = 1;
 * @return {?proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.CreateObjectResponse.prototype.getObject = function() {
  return /** @type{?proto.gojango.admin.ObjectData} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.ObjectData, 1));
};


/**
 * @param {?proto.gojango.admin.ObjectData|undefined} value
 * @return {!proto.gojango.admin.CreateObjectResponse} returns this
*/
proto.gojango.admin.CreateObjectResponse.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.CreateObjectResponse} returns this
 */
proto.gojango.admin.CreateObjectResponse.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.CreateObjectResponse.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ValidationError errors = 2;
 * @return {!Array<!proto.gojango.admin.ValidationError>}
 */
proto.gojango.admin.CreateObjectResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.gojango.admin.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.ValidationError, 2));
};


/**
 * @param {!Array<!proto.gojango.admin.ValidationError>} value
 * @return {!proto.gojango.admin.CreateObjectResponse} returns this
*/
proto.gojango.admin.CreateObjectResponse.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gojango.admin.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ValidationError}
 */
proto.gojango.admin.CreateObjectResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gojango.admin.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.CreateObjectResponse} returns this
 */
proto.gojango.admin.CreateObjectResponse.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.gojango.admin.CreateObjectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.CreateObjectResponse} returns this
 */
proto.gojango.admin.CreateObjectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.UpdateObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.UpdateObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.UpdateObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.UpdateObjectRequest}
 */
proto.gojango.admin.UpdateObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.UpdateObjectRequest;
  return proto.gojango.admin.UpdateObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.UpdateObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.UpdateObjectRequest}
 */
proto.gojango.admin.UpdateObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.UpdateObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.UpdateObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.UpdateObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.UpdateObjectRequest} returns this
 */
proto.gojango.admin.UpdateObjectRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.UpdateObjectRequest} returns this
 */
proto.gojango.admin.UpdateObjectRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.UpdateObjectRequest} returns this
 */
proto.gojango.admin.UpdateObjectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, google.protobuf.Value> data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.gojango.admin.UpdateObjectRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.UpdateObjectRequest} returns this
 */
proto.gojango.admin.UpdateObjectRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.UpdateObjectResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.UpdateObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.UpdateObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.UpdateObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && proto.gojango.admin.ObjectData.toObject(includeInstance, f),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.gojango.admin.ValidationError.toObject, includeInstance),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.UpdateObjectResponse}
 */
proto.gojango.admin.UpdateObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.UpdateObjectResponse;
  return proto.gojango.admin.UpdateObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.UpdateObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.UpdateObjectResponse}
 */
proto.gojango.admin.UpdateObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ObjectData;
      reader.readMessage(value,proto.gojango.admin.ObjectData.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 2:
      var value = new proto.gojango.admin.ValidationError;
      reader.readMessage(value,proto.gojango.admin.ValidationError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.UpdateObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.UpdateObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.UpdateObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gojango.admin.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gojango.admin.ValidationError.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ObjectData object = 1;
 * @return {?proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.getObject = function() {
  return /** @type{?proto.gojango.admin.ObjectData} */ (
    jspb.Message.getWrapperField(this, proto.gojango.admin.ObjectData, 1));
};


/**
 * @param {?proto.gojango.admin.ObjectData|undefined} value
 * @return {!proto.gojango.admin.UpdateObjectResponse} returns this
*/
proto.gojango.admin.UpdateObjectResponse.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gojango.admin.UpdateObjectResponse} returns this
 */
proto.gojango.admin.UpdateObjectResponse.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ValidationError errors = 2;
 * @return {!Array<!proto.gojango.admin.ValidationError>}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.gojango.admin.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.ValidationError, 2));
};


/**
 * @param {!Array<!proto.gojango.admin.ValidationError>} value
 * @return {!proto.gojango.admin.UpdateObjectResponse} returns this
*/
proto.gojango.admin.UpdateObjectResponse.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gojango.admin.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ValidationError}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gojango.admin.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.UpdateObjectResponse} returns this
 */
proto.gojango.admin.UpdateObjectResponse.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.gojango.admin.UpdateObjectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.UpdateObjectResponse} returns this
 */
proto.gojango.admin.UpdateObjectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.DeleteObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.DeleteObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.DeleteObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.DeleteObjectRequest}
 */
proto.gojango.admin.DeleteObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.DeleteObjectRequest;
  return proto.gojango.admin.DeleteObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.DeleteObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.DeleteObjectRequest}
 */
proto.gojango.admin.DeleteObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.DeleteObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.DeleteObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.DeleteObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectRequest} returns this
 */
proto.gojango.admin.DeleteObjectRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectRequest} returns this
 */
proto.gojango.admin.DeleteObjectRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectRequest} returns this
 */
proto.gojango.admin.DeleteObjectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.DeleteObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.DeleteObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.DeleteObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.DeleteObjectResponse}
 */
proto.gojango.admin.DeleteObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.DeleteObjectResponse;
  return proto.gojango.admin.DeleteObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.DeleteObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.DeleteObjectResponse}
 */
proto.gojango.admin.DeleteObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.DeleteObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.DeleteObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.DeleteObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.gojango.admin.DeleteObjectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.DeleteObjectResponse} returns this
 */
proto.gojango.admin.DeleteObjectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectResponse} returns this
 */
proto.gojango.admin.DeleteObjectResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.DeleteObjectsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.DeleteObjectsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.DeleteObjectsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.DeleteObjectsRequest}
 */
proto.gojango.admin.DeleteObjectsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.DeleteObjectsRequest;
  return proto.gojango.admin.DeleteObjectsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.DeleteObjectsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.DeleteObjectsRequest}
 */
proto.gojango.admin.DeleteObjectsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.DeleteObjectsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.DeleteObjectsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectsRequest} returns this
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectsRequest} returns this
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ids = 3;
 * @return {!Array<string>}
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.DeleteObjectsRequest} returns this
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.DeleteObjectsRequest} returns this
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.DeleteObjectsRequest} returns this
 */
proto.gojango.admin.DeleteObjectsRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.DeleteObjectsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.DeleteObjectsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.DeleteObjectsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deletedCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    failedIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    message: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.DeleteObjectsResponse}
 */
proto.gojango.admin.DeleteObjectsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.DeleteObjectsResponse;
  return proto.gojango.admin.DeleteObjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.DeleteObjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.DeleteObjectsResponse}
 */
proto.gojango.admin.DeleteObjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeletedCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFailedIds(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.DeleteObjectsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.DeleteObjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.DeleteObjectsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeletedCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFailedIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 deleted_count = 1;
 * @return {number}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.getDeletedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.setDeletedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string failed_ids = 2;
 * @return {!Array<string>}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.getFailedIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.setFailedIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.addFailedIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.clearFailedIdsList = function() {
  return this.setFailedIdsList([]);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.DeleteObjectsResponse} returns this
 */
proto.gojango.admin.DeleteObjectsResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.ExecuteActionRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ExecuteActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ExecuteActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ExecuteActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    action: jspb.Message.getFieldWithDefault(msg, 3, ""),
    objectIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ExecuteActionRequest}
 */
proto.gojango.admin.ExecuteActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ExecuteActionRequest;
  return proto.gojango.admin.ExecuteActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ExecuteActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ExecuteActionRequest}
 */
proto.gojango.admin.ExecuteActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addObjectIds(value);
      break;
    case 5:
      var value = msg.getParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ExecuteActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ExecuteActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ExecuteActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getObjectIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string action = 3;
 * @return {string}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string object_ids = 4;
 * @return {!Array<string>}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.getObjectIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.setObjectIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.addObjectIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.clearObjectIdsList = function() {
  return this.setObjectIdsList([]);
};


/**
 * map<string, google.protobuf.Value> parameters = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.gojango.admin.ExecuteActionRequest.prototype.getParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gojango.admin.ExecuteActionRequest} returns this
 */
proto.gojango.admin.ExecuteActionRequest.prototype.clearParametersMap = function() {
  this.getParametersMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.ExecuteActionResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ExecuteActionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ExecuteActionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ExecuteActionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    affectedCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.gojango.admin.ValidationError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ExecuteActionResponse}
 */
proto.gojango.admin.ExecuteActionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ExecuteActionResponse;
  return proto.gojango.admin.ExecuteActionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ExecuteActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ExecuteActionResponse}
 */
proto.gojango.admin.ExecuteActionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAffectedCount(value);
      break;
    case 4:
      var value = new proto.gojango.admin.ValidationError;
      reader.readMessage(value,proto.gojango.admin.ValidationError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ExecuteActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ExecuteActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ExecuteActionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAffectedCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gojango.admin.ValidationError.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gojango.admin.ExecuteActionResponse} returns this
 */
proto.gojango.admin.ExecuteActionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ExecuteActionResponse} returns this
 */
proto.gojango.admin.ExecuteActionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 affected_count = 3;
 * @return {number}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.getAffectedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.ExecuteActionResponse} returns this
 */
proto.gojango.admin.ExecuteActionResponse.prototype.setAffectedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ValidationError errors = 4;
 * @return {!Array<!proto.gojango.admin.ValidationError>}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.gojango.admin.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.ValidationError, 4));
};


/**
 * @param {!Array<!proto.gojango.admin.ValidationError>} value
 * @return {!proto.gojango.admin.ExecuteActionResponse} returns this
*/
proto.gojango.admin.ExecuteActionResponse.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gojango.admin.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ValidationError}
 */
proto.gojango.admin.ExecuteActionResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gojango.admin.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ExecuteActionResponse} returns this
 */
proto.gojango.admin.ExecuteActionResponse.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListActionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListActionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListActionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListActionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListActionsRequest}
 */
proto.gojango.admin.ListActionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListActionsRequest;
  return proto.gojango.admin.ListActionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListActionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListActionsRequest}
 */
proto.gojango.admin.ListActionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListActionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListActionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListActionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListActionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.ListActionsRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListActionsRequest} returns this
 */
proto.gojango.admin.ListActionsRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.ListActionsRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ListActionsRequest} returns this
 */
proto.gojango.admin.ListActionsRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.ListActionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ListActionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ListActionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ListActionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListActionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.gojango.admin.AdminAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ListActionsResponse}
 */
proto.gojango.admin.ListActionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ListActionsResponse;
  return proto.gojango.admin.ListActionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ListActionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ListActionsResponse}
 */
proto.gojango.admin.ListActionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.AdminAction;
      reader.readMessage(value,proto.gojango.admin.AdminAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ListActionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ListActionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ListActionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ListActionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gojango.admin.AdminAction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AdminAction actions = 1;
 * @return {!Array<!proto.gojango.admin.AdminAction>}
 */
proto.gojango.admin.ListActionsResponse.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.gojango.admin.AdminAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.AdminAction, 1));
};


/**
 * @param {!Array<!proto.gojango.admin.AdminAction>} value
 * @return {!proto.gojango.admin.ListActionsResponse} returns this
*/
proto.gojango.admin.ListActionsResponse.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gojango.admin.AdminAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.AdminAction}
 */
proto.gojango.admin.ListActionsResponse.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gojango.admin.AdminAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.ListActionsResponse} returns this
 */
proto.gojango.admin.ListActionsResponse.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.SearchObjectsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.SearchObjectsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SearchObjectsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    query: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.SearchObjectsRequest}
 */
proto.gojango.admin.SearchObjectsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.SearchObjectsRequest;
  return proto.gojango.admin.SearchObjectsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.SearchObjectsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.SearchObjectsRequest}
 */
proto.gojango.admin.SearchObjectsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.SearchObjectsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.SearchObjectsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SearchObjectsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SearchObjectsRequest} returns this
 */
proto.gojango.admin.SearchObjectsRequest.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SearchObjectsRequest} returns this
 */
proto.gojango.admin.SearchObjectsRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string query = 3;
 * @return {string}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.SearchObjectsRequest} returns this
 */
proto.gojango.admin.SearchObjectsRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.gojango.admin.SearchObjectsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.SearchObjectsRequest} returns this
 */
proto.gojango.admin.SearchObjectsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.SearchObjectsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.SearchObjectsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.SearchObjectsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.SearchObjectsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SearchObjectsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.gojango.admin.ObjectData.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.SearchObjectsResponse}
 */
proto.gojango.admin.SearchObjectsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.SearchObjectsResponse;
  return proto.gojango.admin.SearchObjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.SearchObjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.SearchObjectsResponse}
 */
proto.gojango.admin.SearchObjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gojango.admin.ObjectData;
      reader.readMessage(value,proto.gojango.admin.ObjectData.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.SearchObjectsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.SearchObjectsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.SearchObjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.SearchObjectsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gojango.admin.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated ObjectData objects = 1;
 * @return {!Array<!proto.gojango.admin.ObjectData>}
 */
proto.gojango.admin.SearchObjectsResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.gojango.admin.ObjectData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.ObjectData, 1));
};


/**
 * @param {!Array<!proto.gojango.admin.ObjectData>} value
 * @return {!proto.gojango.admin.SearchObjectsResponse} returns this
*/
proto.gojango.admin.SearchObjectsResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gojango.admin.ObjectData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.ObjectData}
 */
proto.gojango.admin.SearchObjectsResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gojango.admin.ObjectData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.SearchObjectsResponse} returns this
 */
proto.gojango.admin.SearchObjectsResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.gojango.admin.SearchObjectsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.SearchObjectsResponse} returns this
 */
proto.gojango.admin.SearchObjectsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.ValidationError.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.ValidationError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.ValidationError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ValidationError.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.ValidationError}
 */
proto.gojango.admin.ValidationError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.ValidationError;
  return proto.gojango.admin.ValidationError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.ValidationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.ValidationError}
 */
proto.gojango.admin.ValidationError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.ValidationError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.ValidationError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.ValidationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.ValidationError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.gojango.admin.ValidationError.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ValidationError} returns this
 */
proto.gojango.admin.ValidationError.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.gojango.admin.ValidationError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ValidationError} returns this
 */
proto.gojango.admin.ValidationError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.gojango.admin.ValidationError.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.ValidationError} returns this
 */
proto.gojango.admin.ValidationError.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.FilterOption.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.FilterOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.FilterOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FilterOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.FilterOption}
 */
proto.gojango.admin.FilterOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.FilterOption;
  return proto.gojango.admin.FilterOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.FilterOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.FilterOption}
 */
proto.gojango.admin.FilterOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.FilterOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.FilterOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.FilterOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FilterOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gojango.admin.FilterOption.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FilterOption} returns this
 */
proto.gojango.admin.FilterOption.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.gojango.admin.FilterOption.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FilterOption} returns this
 */
proto.gojango.admin.FilterOption.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.gojango.admin.FilterOption.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gojango.admin.FilterOption} returns this
 */
proto.gojango.admin.FilterOption.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gojango.admin.FilterSpec.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gojango.admin.FilterSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.gojango.admin.FilterSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gojango.admin.FilterSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FilterSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lookupType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto.gojango.admin.FilterOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gojango.admin.FilterSpec}
 */
proto.gojango.admin.FilterSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gojango.admin.FilterSpec;
  return proto.gojango.admin.FilterSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gojango.admin.FilterSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gojango.admin.FilterSpec}
 */
proto.gojango.admin.FilterSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLookupType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = new proto.gojango.admin.FilterOption;
      reader.readMessage(value,proto.gojango.admin.FilterOption.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gojango.admin.FilterSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gojango.admin.FilterSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gojango.admin.FilterSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gojango.admin.FilterSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLookupType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gojango.admin.FilterOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.gojango.admin.FilterSpec.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FilterSpec} returns this
 */
proto.gojango.admin.FilterSpec.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string lookup_type = 2;
 * @return {string}
 */
proto.gojango.admin.FilterSpec.prototype.getLookupType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FilterSpec} returns this
 */
proto.gojango.admin.FilterSpec.prototype.setLookupType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.gojango.admin.FilterSpec.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gojango.admin.FilterSpec} returns this
 */
proto.gojango.admin.FilterSpec.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated FilterOption options = 4;
 * @return {!Array<!proto.gojango.admin.FilterOption>}
 */
proto.gojango.admin.FilterSpec.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.gojango.admin.FilterOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gojango.admin.FilterOption, 4));
};


/**
 * @param {!Array<!proto.gojango.admin.FilterOption>} value
 * @return {!proto.gojango.admin.FilterSpec} returns this
*/
proto.gojango.admin.FilterSpec.prototype.setOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gojango.admin.FilterOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gojango.admin.FilterOption}
 */
proto.gojango.admin.FilterSpec.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gojango.admin.FilterOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gojango.admin.FilterSpec} returns this
 */
proto.gojango.admin.FilterSpec.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};


goog.object.extend(exports, proto.gojango.admin);
